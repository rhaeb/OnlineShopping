@using System.Web;
@using System.Web.Mvc;
@using System.Data;
@using System.Data.SqlClient;
@using System.IO;
@using System.Drawing;
@using System.Drawing.Imaging;
@using System.Web.Services;

@{
    ViewBag.Title = "ViewProducts";
}

<h2>View Products</h2>

<form method="get" action="@Url.Action("ViewProducts")" class="row g-3 mb-4">
    <div class="col-auto">
        <label for="search" class="col-form-label">Search:</label>
    </div>
    <div class="col-auto">
        <input type="text" class="form-control" id="search" name="search" placeholder="Search..." value="@Request.QueryString["search"]">
    </div>
    <div class="col-auto">
        <label for="category" class="col-form-label">Category:</label>
    </div>
    <div class="col-auto">
        <select id="category" name="category" class="form-select">
            <option value="" @(string.IsNullOrEmpty(Request.QueryString["category"]) ? "selected" : "")>All</option>
            <option value="FashionBeauty" @(Request.QueryString["category"] == "FashionBeauty" ? "selected" : "")>Fashion & Beauty</option>
            <option value="Electronics" @(Request.QueryString["category"] == "Electronics" ? "selected" : "")>Electronics</option>
            <option value="Furniture" @(Request.QueryString["category"] == "Furniture" ? "selected" : "")>Furniture</option>
            <option value="Entertainment" @(Request.QueryString["category"] == "Entertainment" ? "selected" : "")>Entertainment</option>
        </select>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary mb-3">Search</button>
    </div>
</form>

@{
    string searchQuery = Request.QueryString["search"];
    string selectedCategory = Request.QueryString["category"];
    string connStr = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\admin\source\repos\OnlineShopping\OnlineShopping\App_Data\OnlineShopping.mdf;Integrated Security=True";

    using (var db = new SqlConnection(connStr))
    {
        db.Open();
        using (var cmd = db.CreateCommand())
        {
            cmd.CommandType = CommandType.Text;
            var query = "SELECT * FROM PRODUCT WHERE QUANTITY > 0";

            if (!string.IsNullOrEmpty(searchQuery))
            {
                query += " AND (CAST(ID AS NVARCHAR) LIKE @search OR NAME LIKE @search OR DESCRIPTION LIKE @search OR CATEGORY LIKE @search)";
                cmd.Parameters.AddWithValue("@search", "%" + searchQuery + "%");
            }

            if (!string.IsNullOrEmpty(selectedCategory))
            {
                query += " AND CATEGORY = @category";
                cmd.Parameters.AddWithValue("@category", selectedCategory);
            }

            cmd.CommandText = query;

            using (var reader = cmd.ExecuteReader())
            {
                if (reader.HasRows)
                {
                    <div class="row d-flex flex-wrap">
                        @while (reader.Read())
                        {
                            <div class="col-md-3 mb-4">
                                <div class="card" data-product-id="@reader["ID"]">
                                    <img class="card-img" src="../Store/Image?filename=@HttpUtility.UrlEncode(reader["IMAGE"] + "")" alt="Product Image">
                                    <div class="card-body">
                                        <h5 class="card-title">@reader["NAME"]</h5>
                                        <p class="card-text"><strong>Price:</strong> P @reader["PRICE"]</p>
                                        <p class="card-text"><strong>Category:</strong> @reader["CATEGORY"]</p>
                                        <p class="card-text">@reader["DESCRIPTION"]</p>
                                        <p class="card-text"><strong>In Stock:</strong> @reader["QUANTITY"]</p>
                                        <div class="form-group">
                                            @if (Session["IsAuthenticated"] != null && (bool)Session["IsAuthenticated"])
                                            {
                                                <input type="number" class="form-control txtqty" name="txtqty" min="0" step="1" max="@reader["QUANTITY"]" placeholder="Quantity" />
                                                <button type="button" class="btnCart" data-product-id="@reader["ID"]" data-price="@reader["PRICE"]">Add to Cart</button>
                                            }
                                            else
                                            {
                                                <p>Please <a href="@Url.Action("Login", "Account")">login</a> to add to cart.</p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-warning">There are no products available.</p>
                }
            }
        }
    }
}

<script src="~/Scripts/LatestJquery/jquery-3.7.1.min.js"></script>
<script>
    $(document).ready(function () {
        $(".btnCart").each(function () {
            $(this).click(function () {
                var productId = $(this).data('product-id');
                var quantity = parseInt($(this).closest('.card').find('.txtqty').val());
                var maxQuantity = parseInt($(this).closest('.card').find('.card-text:last').text().split(': ')[1]);
                var price = $(this).data('price');

                if (quantity > 0 && quantity <= maxQuantity) {
                    addToCart(productId, quantity, price);
                } else {
                    alert("Please enter a valid quantity.");
                }
            });
        });
    });

    function addToCart(productId, quantity, price) {
        console.log("Product ID:", productId);
        console.log("Quantity:", quantity);
        console.log("Price:", price);

        $.post('../Store/AddToCart', {
            productId: productId,
            quantity: quantity,
            price: price
        }, function (data) {
            if (data[0].success == 1) {
                alert(data[0].message);
                location.reload();
            } else {
                alert(data[0].errorMessage);
                console.log(data[0].errorMessage);
            }
        });
    }
</script>

<style>
    .card {
        margin-bottom: 10px;
        margin-top: 10px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        max-width: 300px;
        border-radius: 10px;
    }

    .card img {
        width: 100%;
        height: 150px;
        border-radius: 10px;
        object-fit: contain;
    }

    .card p, h5 {
        padding-left: 8px;
    }

    .card input {
        padding-left: 8px;
        justify-content: center;
        margin-bottom: 10px;
        margin-left: 10px;
        justify-content: center;
        max-width: 200px;
    }

    .price {
        color: grey;
        font-size: 15px;
    }

    .card button {
        border: none;
        outline: 0;
        padding: 12px;
        color: white;
        background-color: #000;
        cursor: pointer;
        width: 100%;
        font-size: 18px;
        border-bottom-left-radius: 20px;
        border-bottom-right-radius: 20px;
    }

    .card button:hover {
        opacity: 0.7;
    }

    .btnCart {
        width: 100%;
    }
</style>
